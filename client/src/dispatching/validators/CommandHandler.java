package dispatching.validators;import communication.Segment;import dataSection.Commands;import exceptions.CommandSyntaxException;import instructions.rotten.RawDecree;import java.util.HashMap;import java.util.Map;import java.util.regex.Matcher;import java.util.regex.Pattern;/** * Звено проверки валидности введенной команды.В случае несовпадения - прерывает цепочку проверок. * @author Come_1LL_F00 aka Lenar Khannanov * @author Leargy aka Anton Sushkevich * @see DataHandler,ArgumentHandler */public class CommandHandler extends DataHandler {    private HashMap<String,RawDecree> commandMap;    //конструктор принимает Объект подразумевающий содержание списка доступных для клиента команд на сервере    /**     * Конструктор принимающий список команд относительно которых будет производиться проверка.     * @param commandList     */    public CommandHandler(Commands commandList){        commandMap = commandList.getCommandMap();    }    /**     * Метод седержащий логику проверки комманды.     * @param parcel     * @return RawDecree     * @throws CommandSyntaxException     */    @Override    public RawDecree handle(Segment parcel) throws CommandSyntaxException{        String tempCommand = parcel.getStringData()[0];        Pattern noCommandPattern = Pattern.compile(".+[\\s\\+.\\+]+");        Matcher matcher = null;        String key = "";        boolean isFound;        for(Map.Entry<String,RawDecree> entry : commandMap.entrySet()) {            matcher = noCommandPattern.matcher(entry.getKey());            key = entry.getKey().split(" ")[0];            isFound = matcher.find();            if (tempCommand.equals(key) && !isFound) {                if (parcel.getStringData().length > 1) {                    throw new CommandSyntaxException("Данная команда не принимает агрументов!");                }                return entry.getValue();            }else if(tempCommand.equals(key) && isFound){                return super.handle(parcel);            }        }        throw new CommandSyntaxException("Неправильно введена команда или введеная вами команда не существует!");    }}